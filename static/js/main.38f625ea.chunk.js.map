{"version":3,"sources":["components/UI/Spinner.module.css","firebase.js","config.js","axios.js","redux/actions/fridge.js","redux/actions/actionTypes.js","redux/selectors/index.js","components/UI/InfoBox.js","components/LocationPin.js","components/CheckFridge.js","components/UI/FridgeModal.js","components/UI/Header.js","components/FridgeForm.js","components/NewMap.js","components/UI/Spinner.js","components/Map.js","containers/FridgeFinder.js","App.js","serviceWorker.js","svc.js","redux/reducers/fridge.js","index.js","containers/container.module.css","components/UI/Modal.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","google","defaultCenter","address","lat","lng","defaultZoom","instance","axios","create","baseURL","database","storage","createActionObj","type","data","addFridgeSuccess","id","submitFridge","submissionData","dispatch","onSuccess","a","error","response","name","Geocode","setApiKey","config","updatedData","streetAddress","fullAddress","concat","borough","fromAddress","geocodeResponse","results","geometry","location","post","console","checkFridge","fridge","image","checkData","log","postCheckImage","checkFridgeSuccess","notes","date","JSON","stringify","Date","url","confirmFridgeSuccess","checkID","fridgeId","checkId","ref","put","on","snapshot","child","getDownloadURL","then","set","postCheckImageSuccess","getCurrentFridge","state","fridges","find","f","currentFridge","InfoBox","className","classes","Info","popupContainer","popuBubbleAnchor","Box","border","pad","background","color","popupBubble","this","props","fridgeData","Component","LocationPin","showInfoBox","clickHandler","Fragment","onClick","event","CheckFridge","useState","setImage","useDispatch","class","onChange","e","target","files","for","Form","onSubmit","check","value","cancelCheck","gap","FormField","htmlFor","TextInput","size","placeholder","label","component","TextArea","direction","Button","active","primary","FridgeModal","checking","setChecking","useEffect","neighborhood","link","instagram","checks","imageURL","instaLink","lastChecked","c","checkList","key","push","getChecks","lastC","length","parse","note","toLocaleString","lastPic","Image","fit","height","width","src","margin","style","alignItems","checkButton","bottom","checkForm","confirmCheck","submitCheck","overflow","flex","align","tag","position","Heading","level","plain","alignSelf","onClose","icon","fontSize","Anchor","href","getMapLink","Head","Header","justify","Text","openSubmissionModal","FridgeForm","setValue","htmlfor","Select","options","option","top","Modal","setAppElement","defaultStyles","content","maxWidth","NewMap","setState","isSubmitModalOpen","openModal","setCurrentFridge","isInfoModalOpen","closeModal","fridgeAdded","postData","isChecking","fetchFridges","markers","map","Container","isOpen","onRequestClose","bootstrapURLKeys","yesIWantToUseGoogleMapApiInternals","connect","fetchedFridges","get","fridgeID","spinner","Loader","Map","bindResizeListener","maps","addDomListenerOnce","gestureHandling","handleApiLoaded","onModalOpen","getFridge","modal","modalClosedHandler","onFridgeChecked","handleChange","textInput","React","createRef","focusTextInput","bind","submitButton","progress","current","focus","modalInfo","status","confirmed","parsed","onFridgeConfirmed","Layer","full","onClickOutside","horizontal","zoomLevel","onGoogleApiLoaded","toggleHover","hover","fetchedFridge","actions","getFridgeChecks","FridgeFinder","h","onFridgeAdded","addFridge","onFridgesLoad","Spinner","fridgeSubmission","animation","onEsc","contentWrap","CheckBox","toggle","checked","Footer","vertical","textAlign","App","loading","Helmet","Grommet","Boolean","window","hostname","match","initialState","submitted","reducer","action","newFridge","updatedFridges","lastCheck","updated","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","init","app","ReactDOM","render","document","getElementById","script","createElement","defer","head","appendChild","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.38f625ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__b2Z2P\",\"load1\":\"Spinner_load1__2Lq4d\"};","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCOvDGXIuekFUUzSPh5l1940wCB657NudI\",\r\n    authDomain: \"nycfridge-1595334632389.firebaseapp.com\",\r\n    databaseURL: \"https://nycfridge-1595334632389.firebaseio.com\",\r\n    projectId: \"nycfridge-1595334632389\",\r\n    storageBucket: \"nycfridge-1595334632389.appspot.com\",\r\n    messagingSenderId: \"1012323391989\",\r\n    appId: \"1:1012323391989:web:0326829c1bd942705fe8bc\",\r\n    measurementId: \"G-8G077TP9PC\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n \r\n  \r\n  export default firebase;","export default {\r\n    google: {\r\n        apiKey: 'AIzaSyCOvDGXIuekFUUzSPh5l1940wCB657NudI',\r\n    },\r\n    defaultCenter: {\r\n        address: '252 Broadway Brooklyn NY 11211',\r\n        lat: 40.7,\r\n        lng: -73.9\r\n    },\r\n    defaultZoom: 12\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://nycfridge-1595334632389.firebaseio.com/',\r\n});\r\n\r\nexport default instance;","import Geocode from \"react-geocode\";\r\n\r\nimport * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n// import { fetchFridges } from '../../svc';\r\nimport firebase from '../../firebase';\r\nimport config from '../../config'\r\n\r\nvar database = firebase.database();\r\nlet storage = firebase.storage();\r\n\r\n/**\r\n * Generic action creator\r\n * @param {actionType enum} type \r\n * @param {Object} data - action payload to pass to reducer\r\n */\r\nexport const createActionObj = (type, data = {}) => ({\r\n  type, data\r\n});\r\n\r\nexport const addFridgeSuccess = (id, data) => {\r\n  return {\r\n    type: actionTypes.ADD_FRIDGE,\r\n    data: data,\r\n    id: id\r\n  }\r\n};\r\n\r\nexport const setCurrentFridge = (fridgeID) => {\r\n  return dispatch => {\r\n    dispatch(createActionObj(actionTypes.SET_CURRENT, fridgeID));\r\n  }\r\n}\r\n\r\nexport const fetchFridges = () => {\r\n  return async dispatch => {\r\n    function onSuccess(response) {\r\n      dispatch(createActionObj(actionTypes.LOAD_FRIDGES, response));\r\n      return response;\r\n    }\r\n    dispatch(createActionObj(actionTypes.FETCH_FRIDGE_START));\r\n    const fetchedFridges = [];\r\n    try {\r\n      const response = await axios.get('/fridges.json');\r\n      for (let key in response.data) {\r\n        fetchedFridges.push({\r\n          ...response.data[key],\r\n          id: key\r\n        });\r\n      }\r\n      return onSuccess(fetchedFridges);\r\n    } catch (error) {\r\n      console.error('Data was not fetched.')\r\n    }\r\n  }\r\n}\r\n\r\nexport const submitFridge = (submissionData) => {\r\n  return async dispatch => {\r\n    function onSuccess(response, data) {\r\n      dispatch(addFridgeSuccess(response.data.name, data));\r\n      return response;\r\n    }\r\n    function onError(error) {\r\n      return error;\r\n    }\r\n    dispatch(createActionObj(actionTypes.ADD_FRIDGE_START));\r\n    Geocode.setApiKey(config.google.apiKey);\r\n    let updatedData = {};\r\n    let streetAddress = submissionData.streetAddress;\r\n    let fullAddress = streetAddress.concat(\" \", submissionData.borough, \" NY\");\r\n    try {\r\n      const geocodeResponse = await Geocode.fromAddress(fullAddress);\r\n      const { lat, lng } = geocodeResponse.results[0].geometry.location;\r\n      updatedData = {\r\n        ...submissionData,\r\n        lat: lat,\r\n        lng: lng\r\n      }\r\n      try {\r\n        const response = await axios.post('/fridges.json', updatedData);\r\n        return onSuccess(response, updatedData);\r\n      } catch (error) {\r\n        console.error(\"Could not submit to database\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Could not fetch coordinates\");\r\n    }\r\n  }\r\n}\r\n\r\nexport const checkFridge = (data, fridge, image) => {\r\n  return async dispatch => {\r\n    function onSuccess(id, response, image, checkData) {\r\n      console.log('success', response);\r\n      if (image) {\r\n        console.log('image', image)\r\n        dispatch(postCheckImage(id, response.data.name, image))\r\n      }\r\n      dispatch(checkFridgeSuccess(response.data.name, checkData));\r\n      return response;\r\n    }\r\n    dispatch(createActionObj(actionTypes.CHECK_START));\r\n    try {\r\n      let checkData = {\r\n        name: data.name,\r\n        notes: data.notes,\r\n        date: JSON.stringify(new Date())\r\n      }\r\n      let url = '/fridges/'.concat(fridge.id, '/checks.json');\r\n      const response = await axios.post(url, checkData)\r\n      return onSuccess(fridge.id, response, image, checkData);\r\n    } catch (error) {\r\n      console.error(\"Could not post check\")\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFridge = (fridgeID) => {\r\n  return async dispatch => {\r\n    function onSuccess(fetchedFridge) {\r\n      dispatch(createActionObj(actionTypes.GET_FRIDGE, fetchedFridge))\r\n    }\r\n    let url = '/fridges/'.concat(fridgeID, '.json');\r\n    try {\r\n      const response = await axios.get(url);\r\n      const fetchedFridge = {\r\n        ...response.data,\r\n        id: fridgeID\r\n      }\r\n      return onSuccess(fetchedFridge)\r\n    } catch(error) {\r\n        console.log(error);\r\n  }\r\n}\r\n}\r\n\r\nexport const confirmFridge = (fridge) => {\r\n  let data = {\r\n    ...fridge,\r\n    confirmed: true\r\n  }\r\n  return dispatch => {\r\n    let url = '/fridges/'.concat(fridge.id, '.json');\r\n    axios.put(url, data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(confirmFridgeSuccess(fridge.id));\r\n      })\r\n  }\r\n}\r\nexport const confirmFridgeSuccess = (id) => {\r\n  return {\r\n    type: actionTypes.CONFIRM_FRIDGE,\r\n    id: id\r\n  }\r\n};\r\n\r\nexport const checkFridgeSuccess = (checkID, checkData) => {\r\n  return {\r\n    type: actionTypes.CHECK_FRIDGE,\r\n    data: checkData,\r\n    id: checkID\r\n  }\r\n};\r\n\r\nexport const postCheckImageSuccess = (url, checkId) => {\r\n  return {\r\n    type: actionTypes.POST_CHECK_IMAGE,\r\n    url: url,\r\n    id: checkId\r\n  }\r\n}\r\n\r\nexport const postCheckImage = (fridgeId, checkId, image) => {\r\n\r\n  return dispatch => {\r\n    const uploadTask = storage.ref(`images/${fridgeId}/${checkId}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => { },\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(`images/${fridgeId}/`)\r\n          .child(checkId)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            console.log('postCheckImage url', url);\r\n            database.ref(`fridges/${fridgeId}/imageURL`).set(url);\r\n            dispatch(postCheckImageSuccess(url, checkId));\r\n          });\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\n\r\nexport const getFridgeChecks = (id) => {\r\n  return dispatch => {\r\n    let url = '/fridges/'.concat(id, '/checks.json');\r\n    axios.get(url)\r\n      .then(response => {\r\n        dispatch(createActionObj(actionTypes.GET_FRIDGE_CHECKS, response.data));\r\n      });\r\n  }\r\n}\r\n\r\n\r\n\r\n","export const LOAD_FRIDGES = 'LOAD_FRIDGES';\r\nexport const CONFIRM_FRIDGE = 'CONFIRM_FRIDGE';\r\n\r\nexport const FETCH_FRIDGE_START = 'FETCH_FRIDGE_START';\r\nexport const FETCH_FRIDGE_FAIL = 'FETCH_FRIDGE_FAIL';\r\n\r\nexport const GET_FRIDGE = 'GET_FRIDGE';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\n\r\nexport const UPDATE_FRIDGE = 'UPDATE_FRIDGE';\r\n\r\nexport const ADD_FRIDGE = 'ADD_FRIDGE';\r\nexport const ADD_FRIDGE_START = 'ADD_FRIDGE_START'\r\n\r\nexport const CHECK_START = 'CHECK_START';\r\nexport const CHECK_FRIDGE = 'CHECK_FRIDGE';\r\nexport const POST_CHECK_IMAGE = 'POST_CHECK_IMAGE';\r\n\r\nexport const GET_FRIDGE_CHECKS = 'GET_FRIDGE_CHECKS';\r\n\r\n","export const getFridges = state => state.fridges;\r\n\r\nexport const getCurrentFridge = state =>\r\n  state.fridges.find(f => f.id == state.currentFridge)","import React, { Component } from 'react';\r\n\r\nimport { Box } from 'grommet';\r\n\r\nimport classes from  './Modal.module.css';\r\n\r\n\r\nclass InfoBox extends Component {\r\n  render () {\r\n    return (\r\n      <div className={classes.Info}>\r\n        <div className={classes.popupContainer}>\r\n        <div className={classes.popuBubbleAnchor}>\r\n          <Box border=\"horizontal\" pad=\"xsmall\"\r\n        background={{ color: 'brand' }} className={classes.popupBubble}>\r\n            {this.props.fridgeData.name}<br/>\r\n            {this.props.fridgeData.streetAddress} <br />\r\n          </Box >\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport Kitchen from '@material-ui/icons/Kitchen'\r\nimport './pin.css'\r\nimport InfoBox from './UI/InfoBox';\r\n\r\nconst LocationPin = ({showInfoBox, fridgeData, clickHandler}) => (\r\n  <React.Fragment>\r\n    <div\r\n    className=\"pin\"\r\n    // onMouseEnter={() => props.toggleHover(props.fridgeData.id)}\r\n    // onMouseLeave={() => props.toggleHover(props.fridgeData.id)}\r\n    onClick={(event) => {clickHandler(fridgeData.id, event)} }\r\n  >\r\n    <Kitchen className=\"pin-icon\" />\r\n    {showInfoBox ? (<InfoBox className=\"mobile\" fridgeData={fridgeData} />) : null}\r\n    {(showInfoBox) ? <InfoBox className=\"desktop\" fridgeData={fridgeData} /> : null}\r\n    \r\n  </div>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default LocationPin;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Anchor, Box, Button, Form, FormField, Image, TextInput, TextArea } from 'grommet';\r\n\r\nimport { checkFridge } from '../redux/actions/fridge';\r\n\r\nconst CheckFridge = (props) => {\r\n  const [image, setImage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleImage = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      setImage(image);\r\n    }\r\n  };\r\n\r\n  const submitCheck = (check, fridgeData) => {\r\n    dispatch(checkFridge(check, fridgeData, image));\r\n    props.cancelCheck(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <Box>\r\n              <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" onChange={handleImage} />\r\n              <label for=\"file\">Upload Fridge Picture</label>\r\n              <Form onSubmit={(event) => submitCheck(event.value, props.f)}>\r\n                <Box gap=\"small\">\r\n                  <FormField htmlFor=\"text\">\r\n                    <TextInput size=\"small\" id=\"textinput-id\" name=\"name\" placeholder=\"Your Name (optional)\" />\r\n                  </FormField>\r\n                  <FormField\r\n                    name=\"notes\"\r\n                    label=\"Notes\"\r\n                    htmlFor=\"text-area\"\r\n                    component={TextArea}\r\n                    placeholder=\"leave your notes about this check-in here!\"\r\n                  />\r\n\r\n                  <Box direction=\"row\" gap=\"xsmall\" >\r\n                    <Button size=\"small\" active label=\"Cancel\" onClick={() => props.cancelCheck(false)} />\r\n                    <Button size=\"small\" type=\"submit\" primary label=\"Submit Check\" />\r\n                  </Box>\r\n\r\n                </Box>\r\n              </Form>\r\n            </Box>\r\n  )\r\n};\r\n\r\n\r\nexport default CheckFridge;","import React, { useState, useEffect } from 'react';\r\nimport { Anchor, Box, Button, Heading, Image } from 'grommet';\r\n\r\nimport Launch from '@material-ui/icons/Launch';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\nimport CheckFridge from './../CheckFridge';\r\n\r\n\r\nconst FridgeModal = (props) => {\r\n\r\n  const [checking, setChecking] = useState(false);\r\n  useEffect(() => {\r\n    \r\n  });\r\n  \r\n\r\n  const { name, neighborhood, streetAddress, notes, link, instagram, lat, lng, checks, imageURL } = props.fridgeData;\r\n  let instaLink = link;\r\n  if (instagram) instaLink = \"http://www.instagram.com/\" + instagram;\r\n\r\n  let lastChecked = null;\r\n\r\n  const getChecks = () => {\r\n    const checkList = [];\r\n    for (let key in checks) {\r\n      checkList.push({\r\n        ...checks[key],\r\n        id: key\r\n      });\r\n    }\r\n    return checkList;\r\n  }\r\n\r\n  if (checks) {\r\n    let c = getChecks();\r\n    let lastC = c[c.length - 1];\r\n    let date = JSON.parse(lastC.date);\r\n    let note = lastC.notes;\r\n    date = new Date(date).toLocaleString();\r\n    let lastPic = imageURL ? (<Image fit=\"contain\" height=\"400\" width=\"250\" src={imageURL} />) : null;\r\n    lastChecked = (\r\n      <Box margin=\"small\" gap=\"xsmall\" style={{ alignItems: \"center\" }}>\r\n        <h3>Last checked: {date}</h3>\r\n        Most recent note:  {note}\r\n        {lastPic}\r\n      </Box>\r\n    );\r\n\r\n  }\r\n\r\n  const checkButton = (\r\n    <Box pad={{ bottom: 'large' }}>\r\n      <Button primary active onClick={() => setChecking(true)} label=\"Check Fridge\" />\r\n    </Box>\r\n  )\r\n\r\n  const checkForm = (\r\n    <CheckFridge f={props.fridgeData} confirmCheck={props.submitCheck} cancelCheck={setChecking} />\r\n  )\r\n\r\n  const getMapLink = (lat, lng) => {\r\n    return 'https://www.google.com/maps/dir/?api=1&destination='.concat(lat, \",\", lng)\r\n  }\r\n\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Box\r\n        flex={false}\r\n        align='center'\r\n        direction='row'\r\n        tag='header'\r\n        style={{ position: 'relative' }}\r\n      >\r\n        <Heading level={4}><strong>\r\n          <Button\r\n            plain\r\n            size=\"large\"\r\n            alignSelf=\"start\"\r\n            onClick={props.onClose}\r\n            label=\"Back To Map\"\r\n            icon={<NavigateBeforeIcon fontSize=\"large\" />} /></strong></Heading>\r\n      </Box>\r\n      <Box\r\n        align=\"center\"\r\n        margin=\"medium\"\r\n        pad=\"medium\"\r\n      >\r\n        <h2>{name}</h2>\r\n        <h2>Neighborhood: {neighborhood}</h2>\r\n        <h3>Location: <Anchor href={getMapLink(lat, lng)}>{streetAddress}<Launch /></Anchor></h3>\r\n        <h3>Notes: {notes}</h3>\r\n\r\n        {instagram && <Button href={instaLink} icon={<InstagramIcon />} label={`@${instagram}`} />}\r\n\r\n        {lastChecked}\r\n        {checking ? checkForm : checkButton}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default FridgeModal;","import React, { useState } from 'react';\r\nimport { Anchor, Box, Button, CheckBox, Grommet, Heading, Header, Layer, Footer, Text } from 'grommet';\r\nimport classes from '../../containers/container.module.css'\r\n\r\nconst Head = (props) => {\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Header background=\"light-4\" pad=\"xsmall\" justify=\"center\">\r\n        <Box gap=\"small\" alignSelf=\"center\">\r\n          <Heading level=\"4\">NYC Community Fridges</Heading>\r\n          <Text>Current Fridge Count : {props.fridges.length}</Text>\r\n        </Box>\r\n      </Header>\r\n      <Box justify=\"center\" direction=\"row\" pad=\"xsmall\" gap=\"small\">\r\n        <Button primary label=\"Add Fridge\" active onClick={props.openSubmissionModal} />\r\n        {/* <CheckBox\r\n          name=\"toggle\"\r\n          toggle\r\n          checked={props.showInfoBox}\r\n          label=\"Show Fridge Info Boxes\"\r\n        // onChange={event => this.setState({ showInfoBox: event.target.checked })}\r\n        /> */}\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Head;\r\n\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  Form,\r\n  FormField,\r\n  Select,\r\n  TextArea,\r\n  TextInput,\r\n} from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\nconst FridgeForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onSubmit = (event) => {\r\n    props.onSubmit(event)\r\n    props.onClose();\r\n  }\r\n  return (\r\n    <Box overflow=\"auto\" pad=\"medium\" gap=\"medium\" margin=\"medium\" margin={{bottom: '100px'}}>\r\n    <Form onSubmit={(event) => onSubmit(event.value)}>\r\n      <FormField name=\"name\" htmlfor=\"textinput-id\" label=\"Fridge Name\">\r\n        <TextInput id=\"textinput-id\" name=\"name\" placeholder=\"Community Fridge\"/>\r\n      </FormField>\r\n      <FormField name=\"streetAddress\" htmlfor=\"textinput-id\" label=\"Location\">\r\n        <TextInput id=\"textinput-id\" name=\"streetAddress\" placeholder=\"Street Address\" />\r\n      </FormField>\r\n      <FormField name=\"borough\" htmlfor=\"textinput-id\" label=\"Borough\">\r\n      <Select\r\n      name=\"borough\"\r\n      options={['Brooklyn', 'Manhattan', 'Queens', 'Bronx', 'Staten Island']}\r\n      value={value}\r\n      onChange={({ option }) => setValue(option)}\r\n      />\r\n      </FormField>\r\n      <FormField name=\"neighborhood\" htmlfor=\"textinput-id\" label=\"Neighborhood\">\r\n        <TextInput id=\"textinput-id\" name=\"neighborhood\" placeholder=\"Bushwick\" />\r\n      </FormField>\r\n      <FormField name=\"instagram\" htmlfor=\"textinput-id\" label=\"Instagram handle\">\r\n        <TextInput id=\"textinput-id\" name=\"instagram\" placeholder=\"@yourfridge\" />\r\n      </FormField>\r\n      <FormField name=\"link\" htmlfor=\"textinput-id\" label=\"Additional Link/Contact\">\r\n        <TextInput id=\"textinput-id\" name=\"link\" placeholder=\"Email address / volunteer form\" />\r\n      </FormField>\r\n      <FormField name=\"notes\" htmlfor=\"textinput-id\" label=\"Notes\">\r\n        <TextArea id=\"textinput-id\" name=\"notes\" placeholder=\"type anything else people should know about this fridge!\" />\r\n      </FormField>\r\n    \r\n      <Box direction=\"row\" gap=\"medium\" pad={{top: \"large\"}}>\r\n        <Button label=\"close\" onClick={props.onClose} />\r\n        <Button type=\"submit\" primary label=\"Submit\" />\r\n        <Button type=\"reset\" label=\"Reset\" />\r\n        \r\n      </Box>\r\n    </Form>\r\n    </Box>\r\n)}\r\n\r\nexport default FridgeForm","import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport { connect } from 'react-redux';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport { Box } from 'grommet';\r\n\r\nimport config from '../config';\r\n\r\nimport { fetchFridges, setCurrentFridge, submitFridge } from '../redux/actions/fridge';\r\nimport { getCurrentFridge } from '../redux/selectors'\r\n\r\nimport LocationPin from './LocationPin';\r\nimport FridgeModal from './UI/FridgeModal'\r\nimport Header from './UI/Header';\r\nimport FridgeForm from './FridgeForm';\r\nimport CheckFridge from './CheckFridge';\r\n\r\nimport classes from '../containers/container.module.css'\r\nimport './map.css'\r\n\r\nModal.setAppElement('#root');\r\nModal.defaultStyles.content.maxWidth = '700px';\r\nModal.defaultStyles.content.margin = '0 auto'\r\n\r\nclass NewMap extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isInfoModalOpen: false,\r\n      isSubmitModalOpen: false,\r\n      isChecking: false,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchFridges();\r\n  }\r\n\r\n  openSubmissionModal = () => this.setState({ isSubmitModalOpen: true})\r\n\r\n  openModal = (id, event) => {\r\n    this.props.setCurrentFridge( id)\r\n    this.setState({ isInfoModalOpen: true})\r\n  }\r\n  \r\n  closeModal = () => {\r\n    this.setState({\r\n      isInfoModalOpen: false,\r\n      isSubmitModalOpen: false\r\n    })\r\n  }\r\n\r\n  fridgeAdded = (postData) => {\r\n    this.props.submitFridge(postData);\r\n  }\r\n\r\n  checkFridge = () => {\r\n    this.setState({isChecking: true});\r\n  }\r\n\r\n  submitCheck = () => {\r\n\r\n  }\r\n\r\n\r\nrender () {\r\n  let markers = this.props.fridges.map(f => {\r\n    return <LocationPin\r\n    key={f.id}\r\n    lat={f.lat}\r\n    lng={f.lng}\r\n    fridgeData={f}\r\n    showInfoBox={true}\r\n    clickHandler={this.openModal}\r\n  />\r\n  });\r\n  \r\n  let modal;\r\n  if (this.state.isChecking) {\r\n    modal = (<CheckFridge fridgeData={this.props.currentFridge} />);\r\n    \r\n  } else {\r\n    modal = (<FridgeModal fridgeData={this.props.currentFridge}/>)\r\n}\r\n  return (\r\n  <div className={classes.Container}>\r\n    <Header\r\n      fridges={this.props.fridges}\r\n      showInfoBox={true}\r\n      openSubmissionModal={this.openSubmissionModal}\r\n    />\r\n    <Modal\r\n      isOpen={this.state.isSubmitModalOpen}\r\n      onRequestClose={this.closeModal}\r\n    >\r\n      <FridgeForm\r\n          onClose={this.closeModal}\r\n          onSubmit={this.fridgeAdded}\r\n        />\r\n    </Modal>\r\n  <Box className=\"google-map\">\r\n    <GoogleMapReact\r\n    bootstrapURLKeys={{ key: config.google.apiKey }}\r\n    defaultCenter={config.defaultCenter}\r\n    defaultZoom={config.defaultZoom}\r\n    yesIWantToUseGoogleMapApiInternals\r\n    >\r\n      {markers}\r\n    </GoogleMapReact>\r\n    <Modal\r\n      isOpen={this.state.isInfoModalOpen}\r\n      onRequestClose={this.closeModal}\r\n    >\r\n      <FridgeModal\r\n        fridgeData={this.props.currentFridge}\r\n        onClose={this.closeModal}\r\n        submitCheck={this.submitCheck}\r\n      />\r\n    </Modal>\r\n    </Box>\r\n\r\n\r\n  </div>\r\n)\r\n\r\n}\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fridges: state.fridges,\r\n    currentFridge: getCurrentFridge(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    submitFridge: (postData) => dispatch(submitFridge(postData)),\r\n    fetchFridges: () => dispatch(fetchFridges()),\r\n    setCurrentFridge: (fridgeID) => dispatch(setCurrentFridge(fridgeID)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMap)","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n  <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner;","import React, { Component } from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { connect } from 'react-redux';\r\nimport { Anchor, Box, Button, CheckBox, Heading, Image, Grommet, Layer, Form, FormField, Text, TextInput, TextArea } from 'grommet';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Launch from '@material-ui/icons/Launch';\r\n\r\nimport config from '../config';\r\n\r\n\r\n\r\nimport LocationPin from './LocationPin';\r\nimport './map.css'\r\n\r\nimport * as actions from '../redux/actions/fridge';\r\n\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the textInput DOM element\r\n    this.textInput = React.createRef();\r\n    this.focusTextInput = this.focusTextInput.bind(this);\r\n    this.submitButton = React.createRef();\r\n    this.state = {\r\n      modal: null,\r\n      checking: false,\r\n      url: \"\",\r\n      image: null,\r\n      progress: 0,\r\n      showInfoBox: true\r\n    }\r\n  }\r\n\r\n  focusTextInput() {\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  bindResizeListener = (map, maps) => {\r\n    maps.event.addDomListenerOnce(map, 'idle', () => {\r\n      map.gestureHandling = \"greedy\"\r\n    });\r\n  };\r\n\r\n  handleApiLoaded = (map, maps) => {\r\n    console.log('map', map, maps)\r\n    map.gestureHandling = \"greedy\"\r\n    // Bind the resize listener\r\n    this.bindResizeListener(map, maps);\r\n  }\r\n\r\n  onModalOpen = (id) => {\r\n    this.props.getFridge(id);\r\n    this.setState({ modal: id });\r\n  }\r\n  modalClosedHandler = () => {\r\n    this.setState({\r\n      modal: null\r\n    });\r\n  }\r\n\r\n  confirmCheck = (data, fridge) => {\r\n    this.props.onFridgeChecked(data, fridge, this.state.image)\r\n    this.setState({ checking: false })\r\n  }\r\n\r\n  getMapLink = (fridge) => {\r\n    return 'https://www.google.com/maps/dir/?api=1&destination='.concat(fridge.lat, \",\", fridge.lng)\r\n  }\r\n\r\n  getChecks = (currentFridge) => {\r\n    const checks = [];\r\n    for (let key in currentFridge.checks) {\r\n      checks.push({\r\n        ...currentFridge.checks[key],\r\n        id: key\r\n      });\r\n    }\r\n    return checks;\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let f = this.props.currentFridge;\r\n    let modalInfo = null;\r\n    if (f) {\r\n      let status;\r\n      let check;\r\n      let lastChecked;\r\n      if (f.confirmed) {\r\n        status = (\r\n          <h4>Status: Confirmed</h4>\r\n        )\r\n        check = (\r\n          <Box pad={{ bottom: 'large' }}>\r\n            <Button primary active onClick={() => this.setState({ checking: true })} label=\"Check Fridge\" />\r\n          </Box>\r\n        )\r\n        if (f.checks) {\r\n          let c = this.getChecks(f)\r\n          let lastC = c[c.length - 1];\r\n          let date = JSON.parse(lastC.date);\r\n          let note = lastC.notes;\r\n          date = new Date(date);\r\n          let parsed = date.toLocaleString();\r\n          let lastPic = f.imageURL ? (<Image fit=\"contain\" height=\"400\" width=\"250\" src={f.imageURL} />) : null;\r\n          lastChecked = (\r\n            <Box margin=\"small\" gap=\"xsmall\" style={{ alignItems: \"center\" }}>\r\n              <h3>Last checked: {parsed}</h3>\r\n              Most recent note:  {note}\r\n              {lastPic}\r\n            </Box>\r\n          )\r\n        }\r\n        if (this.state.checking) {\r\n          check = (\r\n            <Box>\r\n              <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" onChange={this.handleChange} />\r\n              <label for=\"file\">Upload Fridge Picture</label>\r\n              <Form onSubmit={(event) => this.confirmCheck(event.value, f)}>\r\n                <Box gap=\"small\">\r\n                  <FormField htmlFor=\"text\">\r\n                    <TextInput ref={this.textInput} onClick={this.focusTextInput} size=\"small\" id=\"textinput-id\" name=\"name\" placeholder=\"Your Name (optional)\" />\r\n                  </FormField>\r\n                  <FormField\r\n                    name=\"notes\"\r\n                    label=\"Notes\"\r\n                    htmlFor=\"text-area\"\r\n                    ref={this.textInput}\r\n                    component={TextArea}\r\n                    placeholder=\"leave your notes about this check-in here!\"\r\n                  />\r\n\r\n                  <Box direction=\"row\" gap=\"xsmall\" >\r\n                    <Button size=\"small\" active label=\"Cancel\" onClick={() => this.setState({ checking: false })} />\r\n                    <Button ref={this.submitButton} size=\"small\" type=\"submit\" primary label=\"Submit Check\" />\r\n                  </Box>\r\n\r\n                </Box>\r\n              </Form>\r\n            </Box>)\r\n        }\r\n      }\r\n      else {\r\n        status = (<Box><h4>Status: Unconfirmed</h4><Button primary active onClick={() => this.props.onFridgeConfirmed(f)} label=\"Confirm Fridge\" /></Box>)\r\n      }\r\n\r\n      modalInfo = (\r\n        <Box\r\n          align=\"center\"\r\n          margin=\"medium\"\r\n          pad=\"medium\"\r\n          overflow=\"hidden\"\r\n        >\r\n\r\n          <h2>{f.name}</h2>\r\n          <h2>Neighborhood: {f.neighborhood}</h2>\r\n          <h3>Location: <Anchor href={this.getMapLink(f)}>{f.streetAddress}<Launch /></Anchor></h3>\r\n          <h3>Notes: {f.notes}</h3>\r\n          <Button href={f.link} label=\"Social Media\" />\r\n          {status}\r\n          {lastChecked}\r\n          {check}\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box className=\"google-map\">\r\n        {this.state.modal && (\r\n          <Layer full=\"vertical\" onClickOutside={this.modalClosedHandler}>\r\n            <Box overflow='hidden' width=\"large\">\r\n              <Box\r\n                flex={false}\r\n                pad={{ horizontal: 'medium' }}\r\n                align='center'\r\n                direction='row'\r\n                tag='header'\r\n                justify='between'\r\n                style={{ position: 'relative' }}\r\n              >\r\n                <Heading level={4}><strong>\r\n                  <Button\r\n                    plain\r\n                    size=\"large\"\r\n                    alignSelf=\"start\"\r\n                    onClick={this.modalClosedHandler}\r\n                    label=\"Back To Map\"\r\n                    icon={<NavigateBeforeIcon fontSize=\"large\" />} /></strong></Heading>\r\n              </Box>\r\n              <Box flex={true} align='center' background='light-1' overflow='auto'>\r\n                <Box flex={false} background='white'>\r\n                  {modalInfo}\r\n                  <Button alignSelf=\"center\" margin=\"medium\" onClick={this.modalClosedHandler} label=\"Back To Map\" icon={<NavigateBeforeIcon />} />\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Layer>)}\r\n        <GoogleMapReact\r\n\r\n          bootstrapURLKeys={{ key: config.google.apiKey }}\r\n          defaultCenter={this.props.location}\r\n          defaultZoom={this.props.zoomLevel}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\r\n        >\r\n          {this.props.fridges.map(f => (\r\n            <LocationPin\r\n              lat={f.lat}\r\n              lng={f.lng}\r\n              fridgeData={f}\r\n              showInfoBox={this.props.showInfoBox}\r\n              toggleHover={this.props.toggleHover}\r\n              hover={this.props.hover}\r\n              onModalOpen={this.onModalOpen}\r\n            />\r\n          ))}\r\n        </GoogleMapReact>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentFridge: state.currentFridge\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getFridge: (fridgeID) => dispatch(actions.getFridge(fridgeID)),\r\n    onFridgeConfirmed: (fridge) => dispatch(actions.confirmFridge(fridge)),\r\n    onFridgeChecked: (data, fridge, image) => dispatch(actions.checkFridge(data, fridge, image)),\r\n    getFridgeChecks: (id) => dispatch(actions.getFridgeChecks(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React, { Component } from 'react';\r\nimport { Anchor, Box, Button, CheckBox, Grommet, Heading, Header, Layer, Footer, Text } from 'grommet';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport Spinner from '../components/UI/Spinner';\r\nimport FridgeModal from '../components/UI/FridgeModal';\r\nimport FridgeForm from '../components/FridgeForm';\r\nimport * as actions from '../redux/actions/fridge';\r\n\r\nimport classes from './container.module.css';\r\nimport firebase from '../firebase';\r\nimport Map from '../components/Map';\r\n\r\nclass FridgeFinder extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      location: {\r\n        address: '252 Broadway Brooklyn NY 11211',\r\n        lat: 40.7,\r\n        lng: -73.9\r\n      },\r\n      hover: null,\r\n      modal: false,\r\n      url: \"\",\r\n      image: null,\r\n      progress: 0,\r\n      showInfoBox: true\r\n    }\r\n  }\r\n\r\n  onModalOpen = () => {\r\n    this.setState({ modal: true });\r\n  }\r\n  modalClosedHandler = () => {\r\n    this.setState({ modal: false });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onFridgesLoad();\r\n  }\r\n\r\n  toggleHover = (id) => {\r\n    let h = this.state.hover === id ? null : id;\r\n    this.setState({ hover: h })\r\n  };\r\n\r\n  fridgeAdded = (fridge) => {\r\n    this.props.onFridgeAdded(fridge);\r\n  }\r\n\r\n  addFridge = () => {\r\n    this.onModalOpen();\r\n  }\r\n\r\n  render() {\r\n    let map = (<Spinner />);\r\n    let fridgeSubmission = (<Spinner />);\r\n    if (this.props.fridges) {\r\n      map = (\r\n        <Map\r\n          location={this.state.location}\r\n          zoomLevel={12}\r\n          toggleHover={this.toggleHover}\r\n          hover={this.state.hover}\r\n          showInfoBox={this.state.showInfoBox}\r\n          fridges={this.props.fridges}\r\n        />\r\n      )\r\n      fridgeSubmission = (<Layer\r\n        modal\r\n        animation=\"fadeIn\"\r\n        onEsc={this.modalClosedHandler}\r\n        onClickOutside={this.modalClosedHandler}\r\n      >\r\n        <FridgeForm\r\n          onClose={this.modalClosedHandler}\r\n          onSubmit={this.fridgeAdded}\r\n        />\r\n      </Layer>)\r\n    }\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.contentWrap}>\r\n        <Header background=\"light-4\" pad=\"xsmall\" justify=\"center\">\r\n          <Box gap=\"small\" alignSelf=\"center\">\r\n            <Heading level=\"3\">NYC Community Fridges</Heading>\r\n            <Text>Current Fridge Count : {this.props.fridges.length}</Text>\r\n          </Box>\r\n        </Header>\r\n        <Box justify=\"center\" direction=\"row\" pad=\"xsmall\" gap=\"small\">\r\n          <Button primary label=\"Add Fridge\" active onClick={this.addFridge} />\r\n          <CheckBox\r\n            name=\"toggle\"\r\n            toggle\r\n            checked={this.state.showInfoBox}\r\n            label=\"Show Fridge Info Boxes\"\r\n            onChange={event => this.setState({ showInfoBox: event.target.checked })}\r\n          />\r\n        </Box>\r\n        {this.state.modal && fridgeSubmission}\r\n        {map}\r\n        </div>\r\n        <Footer className={classes.Footer}\r\n        justify=\"center\"\r\n          background=\"dark-2\"\r\n          pad={{ horizontal: 'large', vertical: \"small\" }}\r\n        >\r\n          <Box height=\"xxsmall\">\r\n            <Text size=\"xsmall\" textAlign=\"center\">Fridges are set up and maintained by mutual aid organizations and volunteers, aided by <Anchor href=\"https://www.instagram.com/iohnyc/\">IOHNYC.</Anchor> Feed people not landfills, food sovereignty for all. </Text>\r\n            <Text size=\"xsmall\" textAlign=\"center\">Site built using <Anchor href=\"https://reactjs.org/\">React, </Anchor> UI components from <Anchor href=\"https://v2.grommet.io/\">Grommet.io. </Anchor> Source code: <Anchor icon={<GitHubIcon fontSize=\"small\"/>} href=\"https://github.com/marsbtyne/nycfridge\" /></Text>\r\n            </Box>\r\n            </Footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fridges: state.fridges,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //onFridgesLoad: () => dispatch(actions.fetchFridges()),\r\n    onFridgeAdded: (fridge) => dispatch(actions.submitFridge(fridge)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FridgeFinder);","import React, { Component } from 'react';\r\nimport { Grommet, Box, TextInput, Text, Heading, Button } from 'grommet';\r\nimport {Helmet} from 'react-helmet'\r\nimport './App.css';\r\nimport firebase from './firebase';\r\nimport NewMap from './components/NewMap';\r\n\r\nimport FridgeFinder from './containers/FridgeFinder';\r\n\r\nclass App extends Component {\r\n  \r\n  render (props) {\r\n    const theme = {\r\n      global: {\r\n       colors: {\r\n         'light-2': '#f5f5f5',\r\n         'text': {\r\n           light: 'rgba(0, 0, 0, 0.87)',\r\n         },\r\n       },\r\n       edgeSize: {\r\n         small: '14px',\r\n       },\r\n       elevation: {\r\n         light: {\r\n           medium: '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\r\n         },\r\n       },\r\n        font: {\r\n          family: 'Roboto',\r\n          size: '14px',\r\n          height: '20px',\r\n        },\r\n      },\r\n    };\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n    <title>Map of NYC Community Fridges</title>\r\n    <meta name=\"description\" content=\"Map of free community fridges and food shares across New York City\" />\r\n  </Helmet>\r\n  <Grommet>\r\n    \r\n    <NewMap />\r\n  </Grommet>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import Geocode from \"react-geocode\";\r\nimport axios from './axios';\r\nimport config from './config';\r\n\r\nexport const fetchFridges = async () =>  {\r\n  const fetchedFridges = [];\r\n    try {\r\n      const response = await axios.get('/fridges.json');\r\n      for (let key in response.data) {\r\n        fetchedFridges.push({\r\n          ...response.data[key],\r\n          id: key\r\n        });\r\n      }\r\n      return fetchedFridges;\r\n    } catch (error) {\r\n      console.error('Data was not fetched.')\r\n    }\r\n}\r\n\r\nexport const getFridge = async (fridgeID) => {\r\n  let url = '/fridges/'.concat(fridgeID, '.json');\r\n  let fetchedFridge;\r\n  try {\r\n    const response = await axios.get(url);\r\n      fetchedFridge = {\r\n        ...response.data,\r\n        id: fridgeID\r\n      }\r\n      console.log(fetchedFridge)\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n  }\r\n\r\nexport const postFridge = async (submissionData) => {\r\n  Geocode.setApiKey(config.google.apiKey);\r\n  let updatedData = {};\r\n  let streetAddress = submissionData.streetAddress;\r\n  let fullAddress = streetAddress.concat(\" \" , submissionData.borough, \" NY\");\r\n\r\n  try {\r\n    const geocodeResponse =  await Geocode.fromAddress(fullAddress);\r\n    const { lat, lng } = geocodeResponse.results[0].geometry.location;\r\n    updatedData = {\r\n      ...submissionData, \r\n      lat: lat,\r\n      lng: lng\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Could not fetch coordinates\");\r\n  }\r\n  try {\r\n    const response = await axios.post('/fridges.json', updatedData);\r\n  } catch (error) {\r\n    console.error(\"Could not submit to database\");\r\n  }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  fridges: [],\r\n  loading: false,\r\n  submitted: false,\r\n  currentFridge: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_FRIDGE_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.LOAD_FRIDGES:\r\n      return {\r\n        ...state,\r\n        fridges: action.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.GET_FRIDGE:\r\n      return {\r\n        ...state,\r\n        currentFridge: action.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.ADD_FRIDGE_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        submitted: false\r\n      }\r\n    case actionTypes.SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        currentFridge: action.data\r\n      }\r\n    case actionTypes.CHECK_START: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    }\r\n    case actionTypes.ADD_FRIDGE:\r\n      const newFridge = {\r\n        ...action.data,\r\n        id: action.id,\r\n        confirmed: false\r\n      }\r\n      return {\r\n        ...state,\r\n        fridges: state.fridges.concat(newFridge),\r\n        loading: false,\r\n        submitted: true\r\n      }\r\n    case actionTypes.POST_CHECK_IMAGE:\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          imageURL: action.url\r\n        },\r\n        loading:false\r\n      }\r\n    case actionTypes.CHECK_FRIDGE:\r\n    let updatedFridges = state.fridges.map(f => {\r\n        if (f.id === state.currentFridge){\r\n          if (!f.checks) f.checks = {};\r\n          f.checks[action.id] = action.data;\r\n        }\r\n        return {\r\n          ...f,\r\n          lastCheck: action.id\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        fridges: updatedFridges,\r\n      }\r\n      \r\n    case actionTypes.GET_FRIDGE_CHECKS:\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          checks: action.data\r\n        }\r\n      }\r\n    case actionTypes.CONFIRM_FRIDGE:\r\n      const fridges = state.fridges;\r\n      let updated = fridges.map(f => {\r\n        if (f.id === action.id){\r\n          f.confirmed = true;\r\n        }\r\n        return f;\r\n      });\r\n      return {\r\n        ...state,\r\n        fridges: updated,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          confirmed: true\r\n        }\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk'; \r\nimport { Provider } from 'react-redux';\r\n\r\nimport config from './config';\r\nimport { fetchFridges } from './svc'\r\n\r\nimport reducer from './redux/reducers/fridge';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.init = async () => {\r\n  const fridges = await fetchFridges();\r\n  const app  = (\r\n    <Provider store={store}>\r\n        <App fridges={fridges}/>\r\n    </Provider>\r\n  )\r\n  ReactDOM.render(app, document.getElementById('root'));\r\n}\r\n\r\nconst script = document.createElement('script');\r\nscript.src = `https://maps.googleapis.com/maps/api/js?key=${config.google.apiKey}&callback=init`;\r\nscript.defer = true;\r\ndocument.head.appendChild(script);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"container_Container__X1m1k\",\"contentWrap\":\"container_contentWrap__1E3eC\",\"Footer\":\"container_Footer__3RF1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2pVUm\",\"Info\":\"Modal_Info__1E4_K\",\"popupBubble\":\"Modal_popupBubble__1Z61H\",\"popupBubbleAnchor\":\"Modal_popupBubbleAnchor__3g4TB\",\"popupContainer\":\"Modal_popupContainer__3hmTP\"};"],"sourceRoot":""}