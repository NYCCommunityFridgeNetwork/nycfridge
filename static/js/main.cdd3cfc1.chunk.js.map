{"version":3,"sources":["firebase.js","components/UI/Spinner.js","components/UI/Backdrop.js","components/UI/FridgeModal.js","components/FridgeForm.js","axios.js","redux/actions/fridge.js","redux/actions/actionTypes.js","components/UI/InfoBox.js","components/LocationPin.js","components/Map.js","containers/FridgeFinder.js","App.js","serviceWorker.js","redux/reducers/fridge.js","index.js","containers/container.module.css","components/UI/Spinner.module.css","components/UI/Backdrop.module.css"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","spinner","className","classes","Loader","backdrop","props","display","Backdrop","onClick","clicked","Component","FridgeForm","useState","value","setValue","Box","overflow","pad","gap","margin","bottom","Form","onSubmit","event","onClose","FormField","name","htmlfor","label","TextInput","id","placeholder","Select","options","onChange","option","TextArea","direction","top","Button","type","primary","instance","axios","create","baseURL","database","storage","fetchFridgeFail","error","confirmFridgeSuccess","checkFridge","data","fridge","image","checkData","notes","date","JSON","stringify","Date","dispatch","url","concat","post","then","response","console","log","fridgeId","checkId","ref","put","on","snapshot","child","getDownloadURL","set","postCheckImageSuccess","postCheckImage","checkID","checkFridgeSuccess","InfoBox","b","this","hover","border","background","color","fridgeData","streetAddress","LocationPin","onMouseEnter","toggleHover","onMouseLeave","onModalOpen","showInfoBox","Map","bindResizeListener","map","maps","addDomListenerOnce","gestureHandling","handleApiLoaded","getFridge","setState","modal","modalClosedHandler","confirmCheck","onFridgeChecked","state","checking","getMapLink","lat","lng","getChecks","currentFridge","checks","key","push","handleChange","e","target","files","textInput","React","createRef","focusTextInput","bind","submitButton","progress","current","focus","f","modalInfo","status","check","lastChecked","confirmed","active","c","lastC","length","parse","note","parsed","toLocaleString","lastPic","imageURL","Image","fit","height","width","src","style","alignItems","class","for","htmlFor","size","component","onFridgeConfirmed","align","neighborhood","Anchor","href","link","Layer","full","onClickOutside","flex","horizontal","tag","justify","position","Heading","level","plain","alignSelf","icon","fontSize","bootstrapURLKeys","process","defaultCenter","location","defaultZoom","zoomLevel","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","fridges","connect","fridgeID","get","fetchedFridge","catch","actions","getFridgeChecks","FridgeFinder","h","fridgeAdded","onFridgeAdded","addFridge","address","onFridgesLoad","Spinner","fridgeSubmission","animation","onEsc","Container","contentWrap","Header","Text","CheckBox","toggle","checked","Footer","vertical","textAlign","loading","fetchedFridges","submissionData","updatedData","Geocode","setApiKey","fullAddress","borough","fromAddress","results","geometry","App","Helmet","content","Grommet","Boolean","window","hostname","match","initialState","submitted","reducer","action","newFridge","lastCheck","updatedFridges","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.cdd3cfc1.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCOvDGXIuekFUUzSPh5l1940wCB657NudI\",\r\n    authDomain: \"nycfridge-1595334632389.firebaseapp.com\",\r\n    databaseURL: \"https://nycfridge-1595334632389.firebaseio.com\",\r\n    projectId: \"nycfridge-1595334632389\",\r\n    storageBucket: \"nycfridge-1595334632389.appspot.com\",\r\n    messagingSenderId: \"1012323391989\",\r\n    appId: \"1:1012323391989:web:0326829c1bd942705fe8bc\",\r\n    measurementId: \"G-8G077TP9PC\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n \r\n  \r\n  export default firebase;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n  <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n  props.display ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport classes from './Modal.css';\r\nimport Backdrop from './Backdrop';\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log('shouldModalUpdate', this.props.children, nextProps.children)\r\n    return (nextProps.display!== this.props.display || nextProps.children !== this.props.children)\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log('[Modal] WillUpdate');\r\n  }\r\n\r\n  render () {\r\n    \r\n    return (\r\n      <div>\r\n        <Backdrop \r\n          display={this.props.display}\r\n          clicked={this.props.modalClosed}\r\n        />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.display ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: this.props.display ? '1' : '0'\r\n          }}\r\n        >\r\n          {this.props.children}\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  Form,\r\n  FormField,\r\n  Select,\r\n  TextArea,\r\n  TextInput,\r\n} from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\nconst FridgeForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onSubmit = (event) => {\r\n    props.onSubmit(event)\r\n    props.onClose();\r\n  }\r\n  return (\r\n    <Box overflow=\"auto\" pad=\"medium\" gap=\"medium\" margin=\"medium\" margin={{bottom: '100px'}}>\r\n    <Form onSubmit={(event) => onSubmit(event.value)}>\r\n      <FormField name=\"name\" htmlfor=\"textinput-id\" label=\"Fridge Name\">\r\n        <TextInput id=\"textinput-id\" name=\"name\" placeholder=\"Community Fridge\"/>\r\n      </FormField>\r\n      <FormField name=\"streetAddress\" htmlfor=\"textinput-id\" label=\"Location\">\r\n        <TextInput id=\"textinput-id\" name=\"streetAddress\" placeholder=\"Street Address\" />\r\n      </FormField>\r\n      <FormField name=\"borough\" htmlfor=\"textinput-id\" label=\"Borough\">\r\n      <Select\r\n      name=\"borough\"\r\n      options={['Brooklyn', 'Manhattan', 'Queens', 'Bronx', 'Staten Island']}\r\n      value={value}\r\n      onChange={({ option }) => setValue(option)}\r\n      />\r\n      </FormField>\r\n      <FormField name=\"neighborhood\" htmlfor=\"textinput-id\" label=\"Neighborhood\">\r\n        <TextInput id=\"textinput-id\" name=\"neighborhood\" placeholder=\"Bushwick\" />\r\n      </FormField>\r\n      <FormField name=\"link\" htmlfor=\"textinput-id\" label=\"Link/Contact\">\r\n        <TextInput id=\"textinput-id\" name=\"link\" placeholder=\"Website/Social Media\" />\r\n      </FormField>\r\n      <FormField name=\"notes\" htmlfor=\"textinput-id\" label=\"Notes\">\r\n        <TextArea id=\"textinput-id\" name=\"notes\" placeholder=\"type anything else people should know about this fridge!\" />\r\n      </FormField>\r\n    \r\n      <Box direction=\"row\" gap=\"medium\" pad={{top: \"large\"}}>\r\n        <Button label=\"close\" onClick={props.onClose} />\r\n        <Button type=\"submit\" primary label=\"Submit\" />\r\n        <Button type=\"reset\" label=\"Reset\" />\r\n        \r\n      </Box>\r\n    </Form>\r\n    </Box>\r\n)}\r\n\r\nexport default FridgeForm","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://nycfridge-1595334632389.firebaseio.com/',\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\nimport Geocode from \"react-geocode\";\r\n\r\nimport firebase from '../../firebase';\r\n\r\nvar database = firebase.database();\r\nlet storage = firebase.storage();\r\nexport const addFridgeSuccess = (id, data) => {\r\n  return {\r\n    type: actionTypes.ADD_FRIDGE,\r\n    data: data,\r\n    id: id\r\n  }\r\n};\r\n\r\nexport const addFridgeStart = () => {\r\n  return {\r\n    type: actionTypes.ADD_FRIDGE_START\r\n  }\r\n}\r\nexport const submitFridge = (submissionData) => {\r\n  return dispatch => {\r\n  dispatch(addFridgeStart());\r\n    let updatedData = submissionData;\r\n  Geocode.setApiKey(process.env.REACT_APP_AUTH_TOKEN);\r\n  let streetAddress = submissionData.streetAddress;\r\n  let fullAddress = streetAddress.concat(\" \" , submissionData.borough, \" NY\");\r\n  console.log(fullAddress)\r\n  Geocode.fromAddress(fullAddress).then(response => {\r\n    const { lat, lng } = response.results[0].geometry.location;\r\n    console.log(lat, lng);\r\n    updatedData = {\r\n      ...submissionData, \r\n      lat: lat,\r\n      lng: lng\r\n    }\r\n    console.log('with coords', updatedData)\r\n    axios.post('/fridges.json', updatedData)\r\n      .then(response => {\r\n        dispatch(addFridgeSuccess(response.data.name, updatedData));\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchFridgeFail(error));\r\n      });\r\n    })\r\n    .catch(error => {\r\n      });\r\n}\r\n}\r\n\r\nexport const checkStart = () => {\r\n  return {\r\n    type: actionTypes.CHECK_START\r\n  }\r\n}\r\nexport const fetchFridgesStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_FRIDGE_START\r\n  }\r\n}\r\n\r\nexport const fetchFridgeFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_FRIDGE_FAIL\r\n  }\r\n}\r\n\r\nexport const fetchFridgeSuccess = (fridges) => {\r\n  return {\r\n    type: actionTypes.LOAD_FRIDGES,\r\n    data: fridges\r\n  }\r\n}\r\n\r\nexport const getFridgeChecksSuccess = (checkData) => {\r\n  return {\r\n    type: actionTypes.GET_FRIDGE_CHECKS,\r\n    data: checkData\r\n  }\r\n}\r\n\r\nexport const getFridgeSuccess = (fridge) => {\r\n  return {\r\n    type: actionTypes.GET_FRIDGE,\r\n    data: fridge\r\n  }\r\n}\r\n    \r\nexport const fetchFridges = () => {\r\n  return dispatch => {\r\n    dispatch(fetchFridgesStart());\r\n    axios.get('/fridges.json')\r\n    .then(response => {\r\n      const fetchedFridges = [];\r\n      for (let key in response.data) {\r\n        fetchedFridges.push({\r\n          ...response.data[key],\r\n          id: key\r\n        });\r\n        }\r\n      console.log(fetchedFridges)\r\n      dispatch(fetchFridgeSuccess(fetchedFridges));\r\n    })\r\n    .catch(error => {\r\n      \r\n    });\r\n  }\r\n}\r\n\r\nexport const getFridge = (fridgeID) => {\r\n  return dispatch => {\r\n    let url = '/fridges/'.concat(fridgeID, '.json');\r\n    axios.get(url)\r\n    .then(response => {\r\n      const fetchedFridge = {\r\n        ...response.data,\r\n        id: fridgeID\r\n      }\r\n      console.log(fetchedFridge)\r\n      dispatch(getFridgeSuccess(fetchedFridge))\r\n    }).catch(error=>{\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n\r\nexport const confirmFridge = (fridge) => {\r\n  let data = {\r\n    ...fridge,\r\n    confirmed: true\r\n  }\r\n  return dispatch => {\r\n    let url = '/fridges/'.concat(fridge.id, '.json');\r\n    axios.put(url, data)\r\n    .then(response => {\r\n      console.log(response.data);\r\n      dispatch(confirmFridgeSuccess(fridge.id));\r\n    })\r\n  }\r\n}\r\nexport const confirmFridgeSuccess = (id) => {\r\n  return {\r\n    type: actionTypes.CONFIRM_FRIDGE,\r\n    id: id\r\n  }\r\n};\r\n\r\nexport const checkFridgeSuccess = (checkID, checkData) => {\r\n  return {\r\n    type: actionTypes.CHECK_FRIDGE,\r\n    data: checkData,\r\n    id: checkID\r\n  }\r\n};\r\n\r\nexport const postCheckImageSuccess = (url, checkId) => {\r\n  return {\r\n    type: actionTypes.POST_CHECK_IMAGE,\r\n    url: url,\r\n    id: checkId\r\n  }\r\n}\r\n\r\nexport const postCheckImage = (fridgeId, checkId, image) => {\r\n\r\n  return dispatch => {\r\n    const uploadTask = storage.ref(`images/${fridgeId}/${checkId}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {},\r\n      error => {\r\n        console.log (error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(`images/${fridgeId}/`)\r\n          .child(checkId)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            console.log('postCheckImage url', url);\r\n            database.ref(`fridges/${fridgeId}/imageURL`).set(url);\r\n            dispatch(postCheckImageSuccess(url, checkId));\r\n          });\r\n      }\r\n      );\r\n  };\r\n};\r\n\r\nexport const checkFridge = (data, fridge, image) => {\r\n  \r\n  let checkData = {\r\n    name: data.name,\r\n    notes: data.notes,\r\n    date: JSON.stringify(new Date())\r\n  }\r\n\r\n  return dispatch => {\r\n    dispatch(checkStart());\r\n    let url = '/fridges/'.concat(fridge.id, '/checks.json');\r\n    axios.post(url, checkData)\r\n    .then(response => {\r\n      console.log(response.data);\r\n      dispatch(postCheckImage(fridge.id, response.data.name, image));\r\n      dispatch(checkFridgeSuccess(response.data.name, checkData));\r\n    });\r\n  }\r\n}\r\n\r\nexport const getFridgeChecks = (id) => {\r\n  return dispatch => {\r\n  let url = '/fridges/'.concat(id, '/checks.json');\r\n  axios.get(url)\r\n  .then (response =>{\r\n    dispatch(getFridgeChecksSuccess(response.data));\r\n  });\r\n}\r\n}\r\n\r\n\r\n\r\n","export const LOAD_FRIDGES = 'LOAD_FRIDGES';\r\nexport const CONFIRM_FRIDGE = 'CONFIRM_FRIDGE';\r\n\r\nexport const FETCH_FRIDGE_START = 'FETCH_FRIDGE_START';\r\nexport const FETCH_FRIDGE_FAIL = 'FETCH_FRIDGE_FAIL';\r\n\r\nexport const GET_FRIDGE = 'GET_FRIDGE';\r\n\r\nexport const UPDATE_FRIDGE = 'UPDATE_FRIDGE';\r\n\r\nexport const ADD_FRIDGE = 'ADD_FRIDGE';\r\nexport const ADD_FRIDGE_START = 'ADD_FRIDGE_START'\r\n\r\nexport const CHECK_START = 'CHECK_START';\r\nexport const CHECK_FRIDGE = 'CHECK_FRIDGE';\r\nexport const POST_CHECK_IMAGE = 'POST_CHECK_IMAGE';\r\n\r\nexport const GET_FRIDGE_CHECKS = 'GET_FRIDGE_CHECKS';\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { Box } from 'grommet';\r\n\r\nimport './Modal.css';\r\n\r\n\r\nclass InfoBox extends Component {\r\n  \r\n  render () {\r\n    let b = this.props.hover ? 'brand' : '#f4f0ec'\r\n    return (\r\n      <div>\r\n        <div className=\"popupContainer\">\r\n        <div className=\"popuBubbleAnchor\">\r\n          <Box border=\"horizontal\" pad=\"xsmall\"\r\n        background={{ color: b }} className=\"popupBubble\">\r\n            {this.props.fridgeData.name}<br/>\r\n            {this.props.fridgeData.streetAddress} <br />\r\n          </Box >\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport Kitchen from '@material-ui/icons/Kitchen'\r\nimport './pin.css'\r\nimport InfoBox from './UI/InfoBox';\r\n\r\nconst LocationPin = (props) => {\r\n\r\n  let hover = (props.hover === props.fridgeData.id);\r\n  return (\r\n\r\n  <div\r\n    className=\"pin\"\r\n    onMouseEnter={() => props.toggleHover(props.fridgeData.id)}\r\n    onMouseLeave={() => props.toggleHover(props.fridgeData.id)}\r\n    onClick={() => props.onModalOpen(props.fridgeData.id)}\r\n  >\r\n    <Kitchen className=\"pin-icon\" />\r\n    {props.showInfoBox ? (<InfoBox hover={hover}fridgeData={props.fridgeData} />) : null}    \r\n  </div>\r\n);\r\n  }\r\n\r\nexport default LocationPin;","import React, { Component } from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { connect } from 'react-redux';\r\nimport { Anchor, Box, Button, CheckBox, Heading, Image, Grommet, Layer, Form, FormField, Text, TextInput, TextArea } from 'grommet';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Launch from '@material-ui/icons/Launch';\r\n\r\n\r\n\r\nimport LocationPin from './LocationPin';\r\nimport './map.css'\r\n\r\nimport * as actions from '../redux/actions/fridge';\r\n\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the textInput DOM element\r\n    this.textInput = React.createRef();\r\n    this.focusTextInput = this.focusTextInput.bind(this);\r\n    this.submitButton = React.createRef();\r\n    this.state = {\r\n      modal: null,\r\n      checking: false,\r\n      url: \"\",\r\n      image: null,\r\n      progress: 0,\r\n      showInfoBox: true\r\n    }\r\n  }\r\n\r\n  focusTextInput() {\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  bindResizeListener = (map, maps) => {\r\n    maps.event.addDomListenerOnce(map, 'idle', () => {\r\n      map.gestureHandling = \"greedy\"\r\n    });\r\n  };\r\n\r\n  handleApiLoaded = (map, maps) => {\r\n    console.log('map', map, maps)\r\n    map.gestureHandling = \"greedy\"\r\n    // Bind the resize listener\r\n    this.bindResizeListener(map, maps);\r\n  }\r\n\r\n  onModalOpen = (id) => {\r\n    this.props.getFridge(id);\r\n    this.setState({ modal: id });\r\n  }\r\n  modalClosedHandler = () => {\r\n    this.setState({\r\n      modal: null\r\n    });\r\n  }\r\n\r\n  confirmCheck = (data, fridge) => {\r\n    this.props.onFridgeChecked(data, fridge, this.state.image)\r\n    this.setState({ checking: false })\r\n  }\r\n\r\n  getMapLink = (fridge) => {\r\n    return 'https://www.google.com/maps/dir/?api=1&destination='.concat(fridge.lat, \",\", fridge.lng)\r\n  }\r\n\r\n  getChecks = (currentFridge) => {\r\n    const checks = [];\r\n    for (let key in currentFridge.checks) {\r\n      checks.push({\r\n        ...currentFridge.checks[key],\r\n        id: key\r\n      });\r\n    }\r\n    return checks;\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let f = this.props.currentFridge;\r\n    let modalInfo = null;\r\n    if (f) {\r\n      let status;\r\n      let check;\r\n      let lastChecked;\r\n      if (f.confirmed) {\r\n        status = (\r\n          <h4>Status: Confirmed</h4>\r\n        )\r\n        check = (\r\n          <Box pad={{ bottom: 'large' }}>\r\n            <Button primary active onClick={() => this.setState({ checking: true })} label=\"Check Fridge\" />\r\n          </Box>\r\n        )\r\n        if (f.checks) {\r\n          let c = this.getChecks(f)\r\n          let lastC = c[c.length - 1];\r\n          let date = JSON.parse(lastC.date);\r\n          let note = lastC.notes;\r\n          date = new Date(date);\r\n          let parsed = date.toLocaleString();\r\n          let lastPic = f.imageURL ? (<Image fit=\"contain\" height=\"400\" width=\"250\" src={f.imageURL} />) : null;\r\n          lastChecked = (\r\n            <Box margin=\"small\" gap=\"xsmall\" style={{ alignItems: \"center\" }}>\r\n              <h3>Last checked: {parsed}</h3>\r\n              Most recent note:  {note}\r\n              {lastPic}\r\n            </Box>\r\n          )\r\n        }\r\n        if (this.state.checking) {\r\n          check = (\r\n            <Box>\r\n              <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" onChange={this.handleChange} />\r\n              <label for=\"file\">Upload Fridge Picture</label>\r\n              <Form onSubmit={(event) => this.confirmCheck(event.value, f)}>\r\n                <Box gap=\"small\">\r\n                  <FormField htmlFor=\"text\">\r\n                    <TextInput ref={this.textInput} onClick={this.focusTextInput} size=\"small\" id=\"textinput-id\" name=\"name\" placeholder=\"Your Name (optional)\" />\r\n                  </FormField>\r\n                  <FormField\r\n                    name=\"notes\"\r\n                    label=\"Notes\"\r\n                    htmlFor=\"text-area\"\r\n                    ref={this.textInput}\r\n                    component={TextArea}\r\n                    placeholder=\"leave your notes about this check-in here!\"\r\n                  />\r\n\r\n                  <Box direction=\"row\" gap=\"xsmall\" >\r\n                    <Button size=\"small\" active label=\"Cancel\" onClick={() => this.setState({ checking: false })} />\r\n                    <Button ref={this.submitButton} size=\"small\" type=\"submit\" primary label=\"Submit Check\" />\r\n                  </Box>\r\n\r\n                </Box>\r\n              </Form>\r\n            </Box>)\r\n        }\r\n      }\r\n      else {\r\n        status = (<Box><h4>Status: Unconfirmed</h4><Button primary active onClick={() => this.props.onFridgeConfirmed(f)} label=\"Confirm Fridge\" /></Box>)\r\n      }\r\n\r\n      modalInfo = (\r\n        <Box\r\n          align=\"center\"\r\n          margin=\"medium\"\r\n          pad=\"medium\"\r\n          overflow=\"hidden\"\r\n        >\r\n\r\n          <h2>{f.name}</h2>\r\n          <h2>Neighborhood: {f.neighborhood}</h2>\r\n          <h3>Location: <Anchor href={this.getMapLink(f)}>{f.streetAddress}<Launch /></Anchor></h3>\r\n          <h3>Notes: {f.notes}</h3>\r\n          <Button href={f.link} label=\"Social Media\" />\r\n          {status}\r\n          {lastChecked}\r\n          {check}\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box className=\"google-map\">\r\n        {this.state.modal && (\r\n          <Layer full=\"vertical\" onClickOutside={this.modalClosedHandler}>\r\n            <Box overflow='hidden' width=\"large\">\r\n              <Box\r\n                flex={false}\r\n                pad={{ horizontal: 'medium' }}\r\n                align='center'\r\n                direction='row'\r\n                tag='header'\r\n                justify='between'\r\n                style={{ position: 'relative' }}\r\n              >\r\n                <Heading level={4}><strong>\r\n                  <Button\r\n                    plain\r\n                    size=\"large\"\r\n                    alignSelf=\"start\"\r\n                    onClick={this.modalClosedHandler}\r\n                    label=\"Back To Map\"\r\n                    icon={<NavigateBeforeIcon fontSize=\"large\" />} /></strong></Heading>\r\n              </Box>\r\n              <Box flex={true} align='center' background='light-1' overflow='auto'>\r\n                <Box flex={false} background='white'>\r\n                  {modalInfo}\r\n                  <Button alignSelf=\"center\" margin=\"medium\" onClick={this.modalClosedHandler} label=\"Back To Map\" icon={<NavigateBeforeIcon />} />\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Layer>)}\r\n        <GoogleMapReact\r\n\r\n          bootstrapURLKeys={{ key: process.env.REACT_APP_AUTH_TOKEN }}\r\n          defaultCenter={this.props.location}\r\n          defaultZoom={this.props.zoomLevel}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\r\n        >\r\n          {this.props.fridges.map(f => (\r\n            <LocationPin\r\n              lat={f.lat}\r\n              lng={f.lng}\r\n              fridgeData={f}\r\n              showInfoBox={this.props.showInfoBox}\r\n              toggleHover={this.props.toggleHover}\r\n              hover={this.props.hover}\r\n              onModalOpen={this.onModalOpen}\r\n            />\r\n          ))}\r\n        </GoogleMapReact>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentFridge: state.currentFridge\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getFridge: (fridgeID) => dispatch(actions.getFridge(fridgeID)),\r\n    onFridgeConfirmed: (fridge) => dispatch(actions.confirmFridge(fridge)),\r\n    onFridgeChecked: (data, fridge, image) => dispatch(actions.checkFridge(data, fridge, image)),\r\n    getFridgeChecks: (id) => dispatch(actions.getFridgeChecks(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React, { Component } from 'react';\r\nimport { Anchor, Box, Button, CheckBox, Grommet, Heading, Header, Layer, Footer, Text } from 'grommet';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport Spinner from '../components/UI/Spinner';\r\nimport FridgeModal from '../components/UI/FridgeModal';\r\nimport FridgeForm from '../components/FridgeForm';\r\nimport * as actions from '../redux/actions/fridge';\r\n\r\nimport classes from './container.module.css';\r\nimport firebase from '../firebase';\r\nimport Map from '../components/Map';\r\n\r\nclass FridgeFinder extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      location: {\r\n        address: '252 Broadway Brooklyn NY 11211',\r\n        lat: 40.7,\r\n        lng: -73.9\r\n      },\r\n      hover: null,\r\n      modal: false,\r\n      url: \"\",\r\n      image: null,\r\n      progress: 0,\r\n      showInfoBox: true\r\n    }\r\n  }\r\n\r\n  onModalOpen = () => {\r\n    this.setState({ modal: true });\r\n  }\r\n  modalClosedHandler = () => {\r\n    this.setState({ modal: false });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onFridgesLoad();\r\n  }\r\n\r\n  toggleHover = (id) => {\r\n    let h = this.state.hover === id ? null : id;\r\n    this.setState({ hover: h })\r\n  };\r\n\r\n  fridgeAdded = (fridge) => {\r\n    this.props.onFridgeAdded(fridge);\r\n  }\r\n\r\n  addFridge = () => {\r\n    this.onModalOpen();\r\n  }\r\n\r\n  render() {\r\n    let map = (<Spinner />);\r\n    let fridgeSubmission = (<Spinner />);\r\n    if (this.props.fridges) {\r\n      map = (\r\n        <Map\r\n          location={this.state.location}\r\n          zoomLevel={12}\r\n          toggleHover={this.toggleHover}\r\n          hover={this.state.hover}\r\n          showInfoBox={this.state.showInfoBox}\r\n          fridges={this.props.fridges}\r\n        />\r\n      )\r\n      fridgeSubmission = (<Layer\r\n        modal\r\n        animation=\"fadeIn\"\r\n        onEsc={this.modalClosedHandler}\r\n        onClickOutside={this.modalClosedHandler}\r\n      >\r\n        <FridgeForm\r\n          onClose={this.modalClosedHandler}\r\n          onSubmit={this.fridgeAdded}\r\n        />\r\n      </Layer>)\r\n    }\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.contentWrap}>\r\n        <Header background=\"light-4\" pad=\"xsmall\" justify=\"center\">\r\n          <Box gap=\"small\" alignSelf=\"center\">\r\n            <Heading level=\"3\">NYC Community Fridges</Heading>\r\n            <Text>Current Fridge Count : {this.props.fridges.length}</Text>\r\n          </Box>\r\n        </Header>\r\n        <Box justify=\"center\" direction=\"row\" pad=\"xsmall\" gap=\"small\">\r\n          <Button primary label=\"Add Fridge\" active onClick={this.addFridge} />\r\n          <CheckBox\r\n            name=\"toggle\"\r\n            toggle\r\n            checked={this.state.showInfoBox}\r\n            label=\"Show Fridge Info Boxes\"\r\n            onChange={event => this.setState({ showInfoBox: event.target.checked })}\r\n          />\r\n        </Box>\r\n        {this.state.modal && fridgeSubmission}\r\n        {map}\r\n        </div>\r\n        <Footer className={classes.Footer}\r\n        justify=\"center\"\r\n          background=\"dark-2\"\r\n          pad={{ horizontal: 'large', vertical: \"small\" }}\r\n        >\r\n          <Box height=\"xxsmall\">\r\n            <Text size=\"xsmall\" textAlign=\"center\">Fridges are set up and autonomously maintained by mutual aid organizations and volunteers from the neighborhood, aided by <Anchor href=\"https://www.instagram.com/iohnyc/\">IOHNYC. </Anchor> DM individual fridge Instagram pages to get involved. </Text>\r\n            <Text size=\"xsmall\" textAlign=\"center\">Site built using <Anchor href=\"https://reactjs.org/\">React, </Anchor> UI components from <Anchor href=\"https://v2.grommet.io/\">Grommet.io. </Anchor> Source code: <Anchor icon={<GitHubIcon fontSize=\"small\"/>} href=\"https://github.com/marsbtyne/nycfridge\" /></Text>\r\n            </Box>\r\n            </Footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fridges: state.fridges,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFridgesLoad: () => dispatch(actions.fetchFridges()),\r\n    onFridgeAdded: (fridge) => dispatch(actions.submitFridge(fridge)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FridgeFinder);","import React, { Component } from 'react';\r\nimport { Grommet, Box, TextInput, Text, Heading, Button } from 'grommet';\r\nimport {Helmet} from 'react-helmet'\r\nimport './App.css';\r\nimport firebase from './firebase';\r\n\r\nimport FridgeFinder from './containers/FridgeFinder'\r\n\r\nclass App extends Component {\r\n  \r\n  render () {\r\n    const theme = {\r\n      global: {\r\n       colors: {\r\n         'light-2': '#f5f5f5',\r\n         'text': {\r\n           light: 'rgba(0, 0, 0, 0.87)',\r\n         },\r\n       },\r\n       edgeSize: {\r\n         small: '14px',\r\n       },\r\n       elevation: {\r\n         light: {\r\n           medium: '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\r\n         },\r\n       },\r\n        font: {\r\n          family: 'Roboto',\r\n          size: '14px',\r\n          height: '20px',\r\n        },\r\n      },\r\n    };\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n    <title>Map of NYC Community Fridges</title>\r\n    <meta name=\"description\" content=\"Map of free community fridges and food shares across New York City\" />\r\n  </Helmet>\r\n  <Grommet>\r\n    \r\n    <FridgeFinder />\r\n  </Grommet>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  fridges: [],\r\n  loading: false,\r\n  submitted: false,\r\n  currentFridge: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_FRIDGE_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.LOAD_FRIDGES:\r\n      return {\r\n        ...state,\r\n        fridges: action.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.GET_FRIDGE:\r\n      return {\r\n        ...state,\r\n        currentFridge: action.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.ADD_FRIDGE_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        submitted: false\r\n      }\r\n    case actionTypes.CHECK_START: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    }\r\n    case actionTypes.ADD_FRIDGE:\r\n      const newFridge = {\r\n        ...action.data,\r\n        id: action.id,\r\n        confirmed: false\r\n      }\r\n      return {\r\n        ...state,\r\n        fridges: state.fridges.concat(newFridge),\r\n        loading: false,\r\n        submitted: true\r\n      }\r\n    case actionTypes.POST_CHECK_IMAGE:\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          imageURL: action.url\r\n        },\r\n        loading:false\r\n      }\r\n    case actionTypes.CHECK_FRIDGE:\r\n      let f = state.currentFridge;\r\n      if (!f.checks) {\r\n        f.checks = {};\r\n      }\r\n        f.checks[action.id] = action.data\r\n      const newCheck = {\r\n        ...action.data,\r\n        id: action.id,\r\n      }\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...f,\r\n          lastCheck: action.id\r\n        },\r\n      }\r\n    case actionTypes.GET_FRIDGE_CHECKS:\r\n      return {\r\n        ...state,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          checks: action.data\r\n        }\r\n      }\r\n    case actionTypes.CONFIRM_FRIDGE:\r\n      const fridges = state.fridges;\r\n      const updatedFridges = fridges.map(f => {\r\n        if (f.id === action.id){\r\n          f.confirmed = true;\r\n        }\r\n        return f;\r\n      });\r\n      return {\r\n        ...state,\r\n        fridges: updatedFridges,\r\n        currentFridge: {\r\n          ...state.currentFridge,\r\n          confirmed: true\r\n        }\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk'; \r\nimport { Provider } from 'react-redux';\r\n\r\nimport reducer from './redux/reducers/fridge';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app  = (\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>\r\n)\r\nReactDOM.render(app, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"container_Container__3I_BF\",\"contentWrap\":\"container_contentWrap__1Vay0\",\"Footer\":\"container_Footer__3BZWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3K0zH\",\"load1\":\"Spinner_load1__2AjVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3_tKW\"};"],"sourceRoot":""}